{"version":3,"sources":["logo.svg","components/BlogCard.js","components/NewPostDialog.js","pages/home.js","pages/blog.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BlogCard","handleClick","console","log","classes","this","props","blog","_id","title","name","date","Card","CardActionArea","to","style","textDecoration","Grid","container","direction","item","className","titleDiv","Typography","variant","titleText","bottomDiv","nameText","dayjs","format","Component","withStyles","padding","background","minHeight","textAlgin","paddingTop","color","NewPostDialog","state","content","errors","open","handleChange","event","setState","target","id","value","handleSubmit","preventDefault","newPost","axios","post","then","doc","setTimeout","handleClose","catch","err","response","data","Button","onClick","newButton","Dialog","maxWidth","fullWidth","onClose","DialogContent","dialog","onSubmit","spacing","TextField","label","helperText","error","onChange","multiline","rows","type","submitButton","position","left","right","backgroundColor","home","blogs","get","documents","AppBar","appBar","Toolbar","justify","mainGrid","map","margin","blogId","match","params","delete","window","history","back","card","closeIcon","IconButton","bodyText","marginLeft","lineHeight","defaults","baseURL","App","basename","exact","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e637ff18.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component, Fragment } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\n\r\n//Mui stuff\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\n\r\nconst styles = () => ({\r\n  titleDiv: {\r\n    padding: \"30px\",\r\n    background: \"linear-gradient(90deg, #c2e9fb,#81a4fd)\",\r\n    minHeight: 150,\r\n    textAlgin: \"left\",\r\n  },\r\n  titleText: {\r\n    paddingTop: \"30px\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  bottomDiv: {\r\n    padding: \"10px 30px\",\r\n    color: \"#3D0D95\",\r\n  },\r\n});\r\n\r\nclass BlogCard extends Component {\r\n  handleClick = () => {\r\n    console.log(\"clicked\");\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { _id, title, name, date } = this.props.blog;\r\n    return (\r\n      <Card>\r\n        <CardActionArea>\r\n          <Link to={`/blog/${_id}`} style={{ textDecoration: \"none\" }}>\r\n            <Grid container direction=\"column\">\r\n              <Grid item>\r\n                <div className={classes.titleDiv}>\r\n                  <Typography variant=\"h3\" className={classes.titleText}>\r\n                    {title}\r\n                  </Typography>\r\n                </div>\r\n              </Grid>\r\n              <Grid item className={classes.bottomDiv}>\r\n                <Typography variant=\"h5\" className={classes.nameText}>\r\n                  {name}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  {dayjs(date).format(\"dddd, MMMM D, YYYY @ h:mm:ssa\")}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Link>\r\n        </CardActionArea>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(BlogCard);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport axios from \"axios\";\r\n\r\n//Mui stuff\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = () => ({\r\n  dialog: {\r\n    padding: \"50px\",\r\n  },\r\n  newButton: {\r\n    position: \"absolute\",\r\n    left: \"auto\",\r\n    right: \"50px\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  submitButton: {\r\n    backgroundColor: \"#3f51b5\",\r\n    color: \"#FFFFFF\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#E26640\",\r\n    },\r\n  },\r\n});\r\n\r\nclass NewPostDialog extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n    name: \"\",\r\n    errors: {},\r\n    open: false,\r\n  };\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value,\r\n    });\r\n    delete this.state.errors[event.target.id];\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newPost = {\r\n      title: this.state.title,\r\n      name: this.state.name,\r\n      content: this.state.content,\r\n    };\r\n    axios\r\n      .post(\"/blogs/postBlog\", newPost)\r\n      .then((doc) => {\r\n        console.log(doc);\r\n        setTimeout(() => this.handleClose(), 1000);\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          errors: err.response.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({\r\n      open: true,\r\n    });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Button onClick={this.handleClick} className={classes.newButton}>\r\n          New Post\r\n        </Button>\r\n        <Dialog\r\n          maxWidth=\"md\"\r\n          fullWidth\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n        >\r\n          <DialogContent className={classes.dialog}>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <Grid container direction=\"column\" spacing={4}>\r\n                <Grid item>\r\n                  <TextField\r\n                    id=\"title\"\r\n                    label=\"Title\"\r\n                    helperText={\r\n                      this.state.errors.title && this.state.errors.title\r\n                    }\r\n                    error={this.state.errors.title ? true : false}\r\n                    fullWidth\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    id=\"name\"\r\n                    label=\"Name\"\r\n                    helperText={\r\n                      this.state.errors.name && this.state.errors.name\r\n                    }\r\n                    error={this.state.errors.name ? true : false}\r\n                    fullWidth\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    id=\"content\"\r\n                    label=\"Content\"\r\n                    helperText={\r\n                      this.state.errors.content && this.state.errors.content\r\n                    }\r\n                    error={this.state.errors.content ? true : false}\r\n                    multiline\r\n                    rows={15}\r\n                    fullWidth\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    onClick={this.handleSubmit}\r\n                    className={classes.submitButton}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(NewPostDialog);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport BlogCard from \"../components/BlogCard\";\r\nimport NewPostDialog from \"../components/NewPostDialog\";\r\nimport axios from \"axios\";\r\n\r\n//Mui stuff\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n\r\nconst styles = () => ({\r\n  appBar: {\r\n    padding: \"10px\",\r\n  },\r\n  mainGrid: {\r\n    margin: \"0px auto\",\r\n    padding: \"30px 0px\",\r\n    maxWidth: \"750px\",\r\n  },\r\n});\r\n\r\nclass home extends Component {\r\n  state = {\r\n    blogs: [],\r\n  };\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"/blogs\")\r\n      .then((documents) => {\r\n        this.setState({\r\n          blogs: documents.data,\r\n        });\r\n        console.log(this.state.blogs);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <AppBar position=\"static\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h4\">Yuma's Blog</Typography>\r\n            <NewPostDialog className={classes.newButton} />\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          spacing={3}\r\n          className={classes.mainGrid}\r\n        >\r\n          {this.state.blogs.map((blog) => (\r\n            <Grid item>\r\n              <BlogCard blog={blog} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(home);\r\n","import React, { Component } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport axios from \"axios\";\r\nimport dayjs from \"dayjs\";\r\n\r\n//Mui stuff\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n//Icons\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst styles = () => ({\r\n  card: {\r\n    margin: \"50px auto\",\r\n    padding: \"30px 50px\",\r\n    maxWidth: \"1000px\",\r\n  },\r\n  closeIcon: {\r\n    marginLeft: \"95%\",\r\n  },\r\n  titleDiv: {\r\n    padding: \"10px 0px\",\r\n    minHeight: 100,\r\n    textAlgin: \"left\",\r\n  },\r\n  bodyText: {\r\n    lineHeight: 1.3,\r\n  },\r\n});\r\n\r\nclass blog extends Component {\r\n  state = {\r\n    title: \"\",\r\n    name: \"\",\r\n    date: \"\",\r\n    content: \"\",\r\n  };\r\n\r\n  handleClose = () => {\r\n    const blogId = this.props.match.params.blogId;\r\n    axios\r\n      .delete(`/blogs/${blogId}`)\r\n      .then((doc) => {\r\n        console.log(doc.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    setTimeout(() => window.history.back(), 1000);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const blogId = this.props.match.params.blogId;\r\n    axios\r\n      .get(`/blogs/${blogId}`)\r\n      .then((doc) => {\r\n        this.setState({\r\n          title: doc.data.title,\r\n          name: doc.data.name,\r\n          date: doc.data.date,\r\n          content: doc.data.content,\r\n        });\r\n        console.log(doc);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Card className={classes.card}>\r\n        <Grid container direction=\"column\" spacing={2}>\r\n          <Grid item className={classes.closeIcon}>\r\n            <IconButton onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid item>\r\n            <div className={classes.titleDiv}>\r\n              <Typography variant=\"h2\" className={classes.titleText}>\r\n                {this.state.title}\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item className={classes.bottomDiv}>\r\n            <Typography variant=\"h5\" className={classes.nameText}>\r\n              {this.state.name}\r\n            </Typography>\r\n            <Typography variant=\"body1\">\r\n              {dayjs(this.state.date).format(\"dddd, MMMM D, YYYY @ h:mma\")}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h6\" className={classes.bodyText}>\r\n              {this.state.content}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(blog);\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\n//Pages\nimport home from \"./pages/home\";\nimport blog from \"./pages/blog\";\n\naxios.defaults.baseURL = \"https://testblogbackendyuma.herokuapp.com\";\n\nfunction App() {\n  return (\n    <Router basename=\"/testblogyuma\">\n      <Switch>\n        <Route exact path=\"/\" component={home} />\n        <Route exact path=\"/blog/:blogId\" component={blog} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}